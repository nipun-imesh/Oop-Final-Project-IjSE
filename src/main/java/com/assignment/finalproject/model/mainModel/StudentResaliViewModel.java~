package com.assignment.finalproject.model.mainModel;

import com.assignment.finalproject.Cradutil.CrudUtil;
import com.assignment.finalproject.db.DBConnection;
import com.assignment.finalproject.dto.tm.GetResaltTM;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

public class StudentResaliViewModel {

    public ArrayList<GetResaltTM> searchResalt(String classId, String examName, String grade, String studentId) throws SQLException {
        System.out.println("Query Parameters:");
        System.out.println("classId: " + classId);
        System.out.println("examName: " + examName);
        System.out.println("grade: " + grade);
        System.out.println("studentId: " + studentId);

        // SQL query
        String sql = "SELECT subj.s_name AS `Subject Name`, m.mark AS `Marks` " +
                "FROM student s " +
                "INNER JOIN marks m ON s.stu_id = m.stu_id " +
                "INNER JOIN subject subj ON m.sub_id = subj.sub_id " +
                "INNER JOIN exam e ON m.ex_id = e.ex_id " +
                "WHERE s.class = ? AND e.e_name = ? AND s.s_grade = ? AND s.stu_id = ?";

        // Get connection and execute the query
        try (Connection connection = DBConnection.getInstance().getConnection();
             PreparedStatement pst = connection.prepareStatement(sql)) {

            // Set parameters for the PreparedStatement
            pst.setString(1, classId);
            pst.setString(2, examName);
            pst.setString(3, grade);
            pst.setString(4, studentId);

            // Execute query and get result set
            try (ResultSet rst = pst.executeQuery()) {
                ArrayList<GetResaltTM> getResaltTMS = new ArrayList<>();

                // Check if the result set has data
                if (!rst.isBeforeFirst()) {
                    System.out.println("No data found for the given parameters.");
                    return getResaltTMS;  // Return an empty list if no results found
                }

                // Process the result set
                while (rst.next()) {
                    GetResaltTM getResaltTM = new GetResaltTM(
                            rst.getString("Subject Name"), // Subject name
                            rst.getDouble("Marks")         // Marks
                    );
                    getResaltTMS.add(getResaltTM);
                }

                return getResaltTMS; // Return the populated list of results
            }
        }
    }


}
